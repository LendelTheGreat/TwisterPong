<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>net_init("dll_39dll.dll",true);

// Global variable - which player is being controller.
globalvar currentPlayer;
currentPlayer = 0;
globalvar p1;
globalvar p2;
globalvar p3;
globalvar p4;
p1 = 0;
p2 = 0;
p3 = 0;
p4 = 0;

self.gameStarted = false;

connected = net_client_connect("localhost",7676);
//connected = net_client_connect("192.168.173.14",7676);

if (connected == true)
{
    show_message("Connected");
    alarm[0] = 2 * room_speed; // 2 seconds
}
else
{
    show_message("Could not connect");
}

time = 0;
ping = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>net_client_update();

var i;
for (i = 1; i &lt; 5; i += 1) {   
    if (net_client_get(i, 1) == 0) 
    {
        show_message(string(i));
        currentPlayer = i;
             
        p1 = instance_create(32, 0, obj_player_keyboard);
        p1.playerNumber = 1;
        
        p2 = instance_create(room_width - 32 - 16, 0, obj_player_keyboard);
        p2.playerNumber = 2;
    
        p3 = instance_create(0, 32, obj_player_horizontal);
        p3.playerNumber = 3;
        
        p4 = instance_create(0, (room_height - 32) - 16, obj_player_horizontal);
        p4.playerNumber = 4;
        
        break;
    } 
}

self.gameStarted = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>net_client_update();

time += 1;

if (net_client_check(1) == true)
{
    ping = (time)*(1000/room_speed);
    time = 0;
}

if (self.gameStarted) {
    players[0] = (p1);
    players[1] = (p2);
    players[2] = (p3);
    players[3] = (p4);
    
    walls[0] = instance_find(obj_wall_left, 0);
    walls[1] = instance_find(obj_wall_right, 0);
    walls[2] = instance_find(obj_wall_top, 0);
    walls[3] = instance_find(obj_wall_bottom, 0);
    
    var i;
    for (i = 1; i &lt; 4; i += 1) {   
        if (net_client_get(i, 1) != 0) 
        {
            players[i-1].visible = true;
            walls[i-1].visible = false;
        }
        else {
            players[i-1].visible = false;
            walls[i-1].visible = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>net_client_update();

var i;
for (i = 1; i &lt; 5; i += 1)
   {
   
   if (net_client_get(i, 1) == 0) 
   {
        break;
   } 
   
   }
   
show_message(string(i));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_circle(net_client_get(1,1) + 64,net_client_get(1,2),10,true);

//draw_text(10,10,net_client_get(2,1));

//draw_text(net_client_get(1,1)+16,net_client_get(1,2)+16,"ping: "+string(ping));


draw_text(10,10,net_client_get(1,1));
draw_text(110,10,net_client_get(2,1));
draw_text(210,10,net_client_get(3,1));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
